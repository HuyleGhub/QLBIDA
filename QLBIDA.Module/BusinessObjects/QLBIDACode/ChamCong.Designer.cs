//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using DevExpress.ExpressApp.Model;
namespace QLBIDA.Module.BusinessObjects.QLBIDA
{

    public partial class ChamCong : DevExpress.Persistent.BaseImpl.BaseObject
    {
        NhanVien fNhanVienID;
        [Association(@"ChamCongReferencesNhanVien")]
        public NhanVien NhanVienID
        {
            get { return fNhanVienID; }
            set { SetPropertyValue<NhanVien>(nameof(NhanVienID), ref fNhanVienID, value); }
        }

        DateTime fNgayChamCong;
        [ModelDefault("EditMask", "dd/MM/yyyy")]
        [ModelDefault("DisplayFormat", "{0:dd/MM/yyyy}")]
        public DateTime NgayChamCong
        {
            get { return fNgayChamCong; }
            set { SetPropertyValue<DateTime>(nameof(NgayChamCong), ref fNgayChamCong, value); }
        }

        DateTime fgioVao;
        [ModelDefault("EditMask", "HH:mm")]
        [ModelDefault("DisplayFormat", "{0:HH:mm}")]
        public DateTime gioVao
        {
            get { return fgioVao; }
            set
            {
                // Combine NgayChamCong with the time part of the input
                SetPropertyValue<DateTime>(nameof(gioVao), ref fgioVao,
                    NgayChamCong.Date + value.TimeOfDay);
            }
        }

        DateTime fgioRa;
        [ModelDefault("EditMask", "HH:mm")]
        [ModelDefault("DisplayFormat", "{0:HH:mm}")]
        public DateTime gioRa
        {
            get { return fgioRa; }
            set
            {
                // Combine NgayChamCong with the time part of the input
                SetPropertyValue<DateTime>(nameof(gioRa), ref fgioRa,
                    NgayChamCong.Date + value.TimeOfDay);
            }
        }

        public TimeSpan TongGioLamViec
        {
            get
            {
                return gioRa - gioVao;
            }
        }

        decimal fLuongMotGio;
        [ModelDefault("DisplayFormat", "### ### ### ###")]
        public decimal LuongMotGio
        {
            get { return fLuongMotGio; }
            set { SetPropertyValue<decimal>(nameof(LuongMotGio), ref fLuongMotGio, value); }
        }

        decimal ftongLuong;
        [ModelDefault("DisplayFormat", "### ### ### ###")]
        public decimal TongLuong
        {
            get
            {
                // Use decimal multiplication to avoid type mismatch
                ftongLuong = Math.Round((decimal)TongGioLamViec.TotalHours * LuongMotGio, 2);
                return ftongLuong;
            }
            set { SetPropertyValue<decimal>(nameof(TongLuong), ref ftongLuong, value); }
        }

        // Override OnSaving to ensure proper datetime handling
        protected override void OnSaving()
        {
            base.OnSaving();

            // Ensure gioVao and gioRa are set with the correct date
            if (NgayChamCong != DateTime.MinValue)
            {
                if (fgioVao == DateTime.MinValue)
                    fgioVao = NgayChamCong;
                if (fgioRa == DateTime.MinValue)
                    fgioRa = NgayChamCong;
            }
        }
    }
}

